{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-02-phonebook/src/App.js\";\nimport React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56',\n        sex: 'female'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12',\n        sex: 'female'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79',\n        sex: 'male'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26',\n        sex: 'female'\n      }],\n      filter: ''\n    };\n\n    this.addNewContact = data => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, data]\n      }));\n    };\n\n    this.delContact = e => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts.filter(contact => contact.id !== e.target.id)]\n      }));\n    };\n\n    this.changeFilter = e => {\n      const {\n        value\n      } = e.currentTarget;\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const lowerFilter = this.state.filter.toLowerCase();\n    };\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(lowerFilter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.state.contacts,\n        onSubmit: this.addNewContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        handlerFilter: this.changeFilter,\n        filter: this.state.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredContacts,\n        handlerDel: this.delContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.bool.isRequired\n  }))\n};","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-02-phonebook/src/App.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","App","Component","state","contacts","id","name","number","sex","filter","addNewContact","data","setState","prevState","delContact","e","contact","target","changeFilter","value","currentTarget","getVisibleContacts","lowerFilter","toLowerCase","render","filteredContacts","includes","propTypes","string","arrayOf","shape","isRequired","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport PropTypes from \"prop-types\";\n\n\n\nclass App extends React.Component {\n\n    state = {\n        contacts: [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', sex: 'female'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12', sex: 'female'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79', sex: 'male'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26', sex: 'female'},\n        ],\n        filter: ''\n        \n    }\n\n    addNewContact = (data) => {\n        this.setState(prevState => ({\n           contacts: [...prevState.contacts, data]\n        }))\n    }\n\n    delContact = e => {\n        this.setState(prevState => ({\n            contacts: [...prevState.contacts.filter(contact => contact.id !== e.target.id)]\n        }))\n    }\n\n    changeFilter = e => {\n        const {value} = e.currentTarget\n        this.setState({filter: value})\n    }\n\n    getVisibleContacts = () => {\n        const lowerFilter = this.state.filter.toLowerCase()\n    }\n\n\n    render() {\n\n\n\n\n     const filteredContacts = this.state.contacts.filter(contact =>\n         contact.name.toLowerCase().includes(lowerFilter))\n\n    return <>\n        <h1>Phonebook</h1>\n         <ContactForm\n             contacts={this.state.contacts}\n             onSubmit={this.addNewContact}/>\n\n        <h2>Contacts</h2>\n        <Filter handlerFilter={this.changeFilter}\n                filter={this.state.filter}/>\n        <ContactList contacts={filteredContacts}\n                     handlerDel={this.delContact}\n        />\n    </>\n  }\n}\n\nexport default App;\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.bool.isRequired\n        })\n    )\n};\n"]},"metadata":{},"sourceType":"module"}